<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:sec="http://www.springframework.org/schema/security" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
                        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd  
                        http://www.springframework.org/schema/security   
                        http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<!-- 登录界面不拦截 -->
	<sec:http pattern="/toLogin.do" security="none" />
	<!-- session失效跳转不拦截 -->
	<sec:http pattern="/sessionInvalid.do" security="none" />

	<!-- 使用自定义的accessDecisionManager -->
	<sec:http auto-config="true" access-decision-manager-ref="accessDecisionManager">
		<!-- 配置请求需要的权限 -->
		<sec:intercept-url pattern="/pageJumpWithoutAuth.do"
			access="SECURITY_DEMO" />
		<sec:intercept-url pattern="/ajaxWithoutAuth.do"
			access="SECURITY_DEMO" />
		<!--需要AUTH_TO_INDEX才能访问 -->
		<sec:intercept-url pattern="/*" access="AUTH_TO_INDEX" />

		<!-- 自定义的access-denied-handler -->
		<sec:access-denied-handler ref="customAccessDeniedHandler" />

		<!-- 登录表单设置 -->
		<!-- login-page:登录页面 -->
		<!-- login-processing-url:自定义的登录提交action名称,需要与登录form中的action保持一致 -->
		<!-- authentication-failure-url：登录失败后跳转的页面 -->
		<!-- default-target-url：登录成功后跳转的页面,如果配置了authentication-success-handler-ref则不生效 -->
		<!-- username-parameter：登录用户名的参数名称,需要与登录form中的input name='username'保持一致 -->
		<!-- password-parameter：登录密码的参数名称,需要与登录form中的input name='password'保持一致 -->
		<!-- authentication-success-handler-ref:自定义登录成功后的Handler -->
		<sec:form-login login-page="/toLogin.do"
			login-processing-url="/login.do" authentication-failure-url="/toLogin.do?message=authentication-failure"
			authentication-success-handler-ref="customLoginSuccessHandler"
			username-parameter="username" password-parameter="password" />

		<!-- 登出操作 -->
		<!-- invalidate-session是否销毁Session -->
		<!-- logout-url logout地址 -->
		<!-- logout-success-url logout成功后要跳转的地址 -->
		<sec:logout invalidate-session="false" logout-url="/logout.do"
			logout-success-url="/toLogin.do?message=logout-success"
			delete-cookies="JSESSIONID" />

		<!-- Session管理 -->
		<!-- invalid-session-url Session失效后跳转的界面 -->
		<sec:session-management invalid-session-url="/sessionInvalid.do?message=invalid-session"
			session-fixation-protection="migrateSession">
			<sec:concurrency-control
				error-if-maximum-exceeded="false" max-sessions="1"
				expired-url="/sessionInvalid.do?message=expired" />
		</sec:session-management>
	</sec:http>

	<!-- 使用自定义的UserDetailsService -->
	<sec:authentication-manager>
		<sec:authentication-provider
			user-service-ref="customUserDetailsService" />
	</sec:authentication-manager>

	<!-- Spring Security accessDecisionManager 决策管理器 -->
	<!-- AffirmativeBased 一票通过，只要有一个投票器通过就允许访问 -->
	<!-- ConsensusBased 有一半以上投票器通过才允许访问资源 -->
	<!-- UnanimousBased 所有投票器都通过才允许访问 -->
	<!-- 注入 roleVoter修改rolePrefix,否则Spring要求权限必须以ROLE_开头 -->
	<bean id="accessDecisionManager"
		class="org.springframework.security.access.vote.AffirmativeBased">
		<constructor-arg name="decisionVoters">
			<list>
				<ref bean="roleVoter" />
				<ref bean="authenticatedVoter" />
			</list>
		</constructor-arg>
	</bean>

	<!-- 修改rolePrefix,否则Spring要求权限必须以ROLE_开头 -->
	<bean id="roleVoter" class="org.springframework.security.access.vote.RoleVoter">
		<property name="rolePrefix" value=""></property>
	</bean>

	<!-- authenticatedVoter是为了支持IS_AUTHENTICATED这种认证，authenticatedVoter提供的3种认证，分别是 -->
	<!-- IS_AUTHENTICATED_ANONYMOUSLY 允许匿名用户进入 -->
	<!-- IS_AUTHENTICATED_FULLY 允许登录用户进入 -->
	<!-- IS_AUTHENTICATED_REMEMBERED 允许登录用户和rememberMe用户进入 -->
	<bean id="authenticatedVoter"
		class="org.springframework.security.access.vote.AuthenticatedVoter" />

</beans>  