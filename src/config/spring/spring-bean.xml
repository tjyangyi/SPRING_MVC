<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jaxws="http://cxf.apache.org/jaxws" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
       http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd">

	<!-- 扫描注解bean -->
	<context:component-scan base-package="com.fhzz" />

	<!-- 设置数据源属性 -->
	<bean id="dataSource" class="com.atomikos.jdbc.AtomikosDataSourceBean"
		init-method="init" destroy-method="close">
		<property name="uniqueResourceName" value="resource1" />
		<property name="xaDataSourceClassName" value="com.alibaba.druid.pool.xa.DruidXADataSource" />
		<property name="xaProperties">
			<props>
				<prop key="url">${connection.url}</prop>
				<prop key="username">${connection.username}</prop>
				<prop key="password">${connection.password}</prop>
			</props>
		</property>
		<property name="maxPoolSize" value="20" />
	</bean>
	
	<!-- 设置数据源属性 -->
	<bean id="dataSource2" class="com.atomikos.jdbc.AtomikosDataSourceBean"
		init-method="init" destroy-method="close">
		<property name="uniqueResourceName" value="resource2" />
		<property name="xaDataSourceClassName" value="com.alibaba.druid.pool.xa.DruidXADataSource" />
		<property name="xaProperties">
			<props>
				<prop key="url">${connection2.url}</prop>
				<prop key="username">${connection2.username}</prop>
				<prop key="password">${connection2.password}</prop>
			</props>
		</property>
		<property name="maxPoolSize" value="20" />
	</bean>


	<!-- Hibernate sessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 为了使用getCurrentSession，注册事务管理器 -->
		<property name="JtaTransactionManager">
			<ref bean="jtaTransactionManager" />
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.fhzz.**.entity</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.format_sql">false</prop>
				<prop key="hibernate.query.substitutions">true 1, false 0</prop>
				<prop key="hibernate.default_batch_fetch_size">16</prop>
				<prop key="hibernate.max_fetch_depth">2</prop>
				<prop key="hibernate.generate_statistics">true</prop>
				<prop key="hibernate.bytecode.use_reflection_optimizer">true</prop>
				<prop key="current_session_context_class">thread</prop>
				<prop key="hibernate.connection.autoReconnect">true</prop>
				<prop key="hibernate.connection.autoReconnectForPools">true</prop>
				<prop key="hibernate.connection.is-connection-validation-required">true</prop>
				<!-- 缓存Cache配置 -->
				<!-- 打开二级缓存 -->
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<!-- 查询缓存 -->
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<!-- 由于spring也使用了Ehcache, 保证双方都使用同一个缓存管理器 -->
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.SingletonEhCacheRegionFactory
				</prop>
				<prop key="hibernate.cache.provider_class">net.sf.ehcache.hibernate.SingletonEhCacheProvider
				</prop>
				<prop key="net.sf.ehcache.configurationResourceName">config/spring/ehcache-hibernate.xml</prop>
				<prop key="hibernate.cache.use_structured_entries">true</prop>
			</props>
		</property>
	</bean>
	
	
	<bean id="sessionFactory2"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource2" />
		<!-- 为了使用getCurrentSession，注册事务管理器 -->
		<property name="JtaTransactionManager">
			<ref bean="jtaTransactionManager" />
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.fhzz.**.entity</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLInnoDBDialect</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.format_sql">false</prop>
				<prop key="hibernate.query.substitutions">true 1, false 0</prop>
				<prop key="hibernate.default_batch_fetch_size">16</prop>
				<prop key="hibernate.max_fetch_depth">2</prop>
				<prop key="hibernate.generate_statistics">true</prop>
				<prop key="hibernate.bytecode.use_reflection_optimizer">true</prop>
				<prop key="current_session_context_class">thread</prop>
				<prop key="hibernate.connection.autoReconnect">true</prop>
				<prop key="hibernate.connection.autoReconnectForPools">true</prop>
				<prop key="hibernate.connection.is-connection-validation-required">true</prop>
				<!-- 缓存Cache配置 -->
				<!-- 打开二级缓存 -->
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<!-- 查询缓存 -->
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<!-- 由于spring也使用了Ehcache, 保证双方都使用同一个缓存管理器 -->
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.SingletonEhCacheRegionFactory
				</prop>
				<prop key="hibernate.cache.provider_class">net.sf.ehcache.hibernate.SingletonEhCacheProvider
				</prop>
				<prop key="net.sf.ehcache.configurationResourceName">config/spring/ehcache-hibernate.xml</prop>
				<prop key="hibernate.cache.use_structured_entries">true</prop>
			</props>
		</property>
	</bean>

	<bean id="jdbcTemplate" class="com.fhzz.core.dao.impl.support.JdbcTemplageSupport">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="hibernateTemplate" class="com.fhzz.core.dao.impl.support.HibernateTemplateSupport">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<bean id="jdbcTemplate2" class="com.fhzz.core.dao.impl.support.JdbcTemplageSupport">
		<property name="dataSource" ref="dataSource2" />
	</bean>

	<bean id="hibernateTemplate2" class="com.fhzz.core.dao.impl.support.HibernateTemplateSupport">
		<property name="sessionFactory" ref="sessionFactory2" />
	</bean>

</beans>